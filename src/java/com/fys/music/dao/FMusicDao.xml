<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fys.music.dao.FMusicDao">
    <!--插入一条数据到数据库-->
    <insert id="insertUser" parameterType="User">
        insert into fmusic.user (username, password, email, url, state, sex, age, phone, birthday, hobby, address) values (#{username},#{password}, #{email}, #{url}, #{state}, #{sex}, #{age}, #{phone}, #{birthday}, #{hobby}, #{address})
    </insert>

    <!--通过用户名查询用户是否存在-->
    <select id="selectByUsername" parameterType="String" resultType="String">
        select username from fmusic.user where username = #{username}
    </select>

    <!--通过用户名查询密码，用于登陆-->
    <select id="selectPasswordByUsername" parameterType="String" resultType="String">
        select password from fmusic.user where username = #{username}
    </select>

    <!--根据用户名查询状态-->
    <select id="selectState" parameterType="String" resultType="Integer">
        select state from user where username = #{username}
    </select>

    <!--激活用户-->
    <update id="updateState" parameterType="String">
        update user set state = 1 where url = #{url}
    </update>

    <!--查询邮箱是否已经被使用-->
    <select id="selectMailIsExist" parameterType="String" resultType="String">
        select email from user where email = #{email}
    </select>

    <!--查询所有磁力链-->
    <select id="selectResource" resultType="Resource">
        select id, magnet from resource
    </select>

    <!--分页查询磁力链-->
    <select id="selectResourceByPage" resultType="Resource">
        select id, magnet from resource limit #{currentPage},#{pageSize}
    </select>

    <!--更新validateCode-->
    <update id="updateValidateCode" parameterType="String">
        update user set validatecode = #{validateCode}
    </update>

    <!--查询找回密码的validateCode-->
    <select id="selectValidateCode" parameterType="String" resultType="String">
        select validatecode from user where email = #{email}
    </select>

    <!--设置找回密码的过期时间-->
    <update id="updateOutDate" parameterType="Date">
        update user set outdate = #{outDate}
    </update>

    <!--查询找回密码的过期时间-->
    <select id="selectOutDate" resultType="String" parameterType="String">
        select outdate from user where validatecode = #{validateCode}
    </select>

    <!--通过用户名修改密码-->
    <update id="updatePassword" >
        update user set password = #{password} where username = #{username}
    </update>

    <!--通过邮箱查询用户名-->
    <select id="selectUsernameByEmail" parameterType="String" resultType="String">
        select username from user where email = #{email}
    </select>

    <!--根据id查询音乐信息-->
    <select id="selectMusicById" parameterType="Integer" resultType="Music">
        select id, name, author, path, picpath from music where id = #{id}
    </select>

    <!--查询所有的音乐-->
    <select id="selectMusic" resultType="Music">
        select id, name, author, path, picpath from music
    </select>

    <!--根据id查询歌曲是否已经被收藏-->
    <select id="selectCollectById" resultType="String">
        select * from user_music where music_id = #{id} and user_id = #{user_id}
    </select>

    <!--收藏歌曲-->
    <insert id="collectMusic">
        insert into user_music (user_id, music_id) values (#{user_id}, #{id})
    </insert>

    <!--根据用户名查询用户id-->
    <select id="selectIdByUsername" parameterType="String" resultType="String">
        select id from user where username = #{username}
    </select>

    <!--查询用户的收藏列表-->
    <select id="selectAllMusic" resultType="Music">
        select * from music where id in (select music_id from user_music where user_id=#{userId}) group by id
    </select>

    <!--查询用户信息-->
    <select id="getUserInfo" parameterType="String" resultType="User">
        select username, email, sex, age, birthday, hobby, phone, address, last_login as lastLoginTime, signature from user where username = #{username}
    </select>

    <!--更新个性签名-->
    <update id="updateSignature">
        update user set signature = #{signature} where username = #{username}
    </update>

    <!--更新最后登录的时间-->
    <update id="updateLastLoginTime" parameterType="String">
        update user set last_login = now() where username = #{username}
    </update>

    <!--取消收藏音乐-->
    <delete id="deleteFav">
        delete from user_music where user_id = #{user_id} and music_id = #{music_id}
    </delete>

    <!--搜索音乐信息-->
    <select id="search" resultType="Music">
        select * from music where concat(name, author) like "%"#{searchContent}"%"
    </select>
</mapper>